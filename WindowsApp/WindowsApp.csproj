<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net7.0-windows10.0.22621.0</TargetFramework>
    <RootNamespace>WindowsApp</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;arm64</Platforms>
    <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
  </PropertyGroup>
  <ItemGroup>
    <Content Remove="Assets\Config\credentials.json" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="Controls\MessageBoxControl.xaml" />
    <None Remove="Pages\HomePage.xaml" />
    <None Remove="Pages\InboxPage.xaml" />
    <None Remove="Pages\MessageBoxesPage.xaml" />
    <None Remove="Pages\SettingsPage.xaml" />
    <None Remove="Pages\SortingPage.xaml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\StoreLogo.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="kintscher.dev.CleanArchitecture.Core" Version="1.0.4" />
    <PackageReference Include="kintscher.dev.CleanArchitecture.Entities" Version="1.0.1" />
    <PackageReference Include="kintscher.dev.CleanArchitecture.Windows" Version="1.1.2" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.4.231115000" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.2428" />
    <PackageReference Include="MimeKit" Version="4.3.0" />
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
       Tools extension to be activated for this project even if the Windows App SDK Nuget
       package has not yet been restored -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnablePreviewMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Domain\Domain.csproj" />
    <ProjectReference Include="..\Infrastructure\Network.csproj" />
    <ProjectReference Include="..\InterfaceAdapters\InterfaceAdapters.csproj" />
    <ProjectReference Include="..\WindowsOS\WindowsOS.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="Assets\Config\credentials.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <Page Update="Pages\SortingPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Pages\MessageBoxesPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Controls\MessageBoxControl.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Pages\InboxPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Pages\HomePage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\SettingsPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
</Project>
